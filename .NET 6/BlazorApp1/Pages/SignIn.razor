@page "/signIn"
@using DataLayer.Services
@using DataLayer.Models
@using Blazored.LocalStorage
@inject NavigationManager navManager;
@inject Blazored.LocalStorage.ILocalStorageService localStorage;
@inject UtilizadorService userService;

<div class="min-h-screen bg-gray-200 flex justify-center items-center">

    <div class="bg-white h-[320px] w-[400px]">
        <h1 class="pt-10 pb-1 text-center font-black text-3xl">Sign-in</h1>

        <div class="space-y-5 m-4">
            <input type="text" id="name" placeholder="Username" @bind="username" class="w-full p-2.5 text-neutral-400 text-sm font-extralight shadow-sm border border-zinc-300 rounded-3xl block dark:text-black" required>

            <input type="password" id="password" placeholder="Password" @bind="password" class="w-full p-2.5 text-neutral-400 text-sm font-extralight shadow-sm border border-zinc-300 rounded-3xl block dark:text-black" required>
        </div>

        <div class="flex justify-end mr-6">
            <button type="submit" @onclick="logIn" class="px-10 py-2 bg-red-500 rounded-3xl shadow text-white text-center text-lg font-semibold justify-items-end items-center inline-flex hover:bg-red-400">Continue</button>
        </div>

    </div>
</div>


@code {
    private string username { get; set; }
    private string password { get; set; }
    const string noteKey = "note";
    Utilizador noteContent;
    string usernome;

    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender){
            Console.WriteLine("b");
            usernome = await localStorage.GetItemAsync<string>("note");
            StateHasChanged();
        }
    }
    
    public async Task logIn()
    {

        noteContent = userService.FindById(username);
        if (noteContent == null)
        {
            navManager.NavigateTo("/signIn/");
        }
        else
        {
            if (noteContent.password != password)
            {
                navManager.NavigateTo("/signIn/");
            }
            else
            {
                await localStorage.SetItemAsync("note", username);
                navManager.NavigateTo("/profile/");
            }
        }
    }
}