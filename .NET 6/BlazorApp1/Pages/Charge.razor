@page "/charge"
@layout MainLayoutWnavbar
@using DataLayer.Services
@using DataLayer.Models
@using Blazored.LocalStorage
@inject NavigationManager navManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject UtilizadorService userService
@inject CarregamentoService carrService

<div class="fixed w-full min-h-screen bg-gray-200 flex justify-center">

    <div class="mt-20 bg-white shadow h-[300px] w-[350px]">

        <EditForm Model="@carrega" OnValidSubmit="HandleSubmit">
            <h1 class="pt-10 pb-1 text-center font-extrabold text-3xl">Charge Account</h1>

            <div class="m-4">

                <p class="my-2 font-semibold text-xl">
                    Current balance:
                    <span class="font-normal text-gray-600">
                        <!--ir buscar valor-->
                        @user.valor €
                    </span>
                </p>


                <label for="quantia" class="my-1.5 text-xl font-semibold">Amount to add (€):</label>
                <input type="number" id="quantia" placeholder="0.00" @bind=carrega.valor step="0.01" min="0"
                       class="w-1/2 p-2.5 text-neutral-400 text-sm font-extralight shadow-sm border border-zinc-300 rounded-2xl dark:text-black" required>

            </div>

            <div class="flex justify-end mr-5 mt-2 gap-3 mt-4">
                <button type="button" @onclick="cancel" class="text-lg font-semibold">Cancel</button>

                <button type="submit" class="px-10 py-2 bg-red-500 rounded-3xl shadow text-white text-center text-lg font-semibold justify-items-end items-center inline-flex hover:bg-red-400">Confirm</button>
            </div>

        </EditForm>
    </div>
</div>



@code {
    string username;
    Utilizador user = new Utilizador();
    Carregamento carrega = new Carregamento();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            username = await localStorage.GetItemAsync<string>("note");
            user = userService.FindById(username);
            StateHasChanged();
        }
    }

    public void HandleSubmit(EditContext editContext)
    {
        var newCarregamento = (Carregamento)editContext.Model;
        newCarregamento.Username = username;
        newCarregamento.Data = DateTime.Now;
        newCarregamento.IDCarregamento = carrService.GetLength();
        carrService.AddCarregamento(newCarregamento);
        user.valor += newCarregamento.valor;
        user.saldo_fantasma += newCarregamento.valor;
        userService.AddUpdate(user);
    }

    public void cancel()
    {
        navManager.NavigateTo("/profile/");
    }


}